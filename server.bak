const express = require("express");
const {
  VertexAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google-cloud/vertexai");
const app = express();
const port = 3000;

const project = "arcookingapp";
const location = "us-central1";
const vertex_ai = new VertexAI({ project: project, location: location });

const prompt = `
You are an action detection AI, make sure the following checklist and action are fulfilled, reply in the following JSON format as text

JSON format:
{
  checklist: {
    "object": true | false
  },
  actionFulfilled: true | false
}

Checklist:
1. knife
2. hand
3. leek

Action:
cutting a leek
`;

const generativeVisionModel = vertex_ai.preview.getGenerativeModel({
  model: "gemini-pro-vision",
});

app.use(express.static("public"));

app.get("/", async (req, res) => {
  try {
    const result = await multiPartContent();
    res.send(generateHtml(result));
  } catch (error) {
    console.error("Error:", error);
    res.status(500).send("Internal Server Error");
  }
});

async function multiPartContent() {
  const filePart = {
    file_data: {
      file_uri: "gs://ar-image/Screenshot 2023-12-18 at 9.29.47â€¯PM.png",
      mime_type: "image/png",
    },
  };
  const textPart = { text: prompt };
  const request = {
    contents: [{ role: "user", parts: [textPart, filePart] }],
  };
  const streamingResp = await generativeVisionModel.generateContentStream(
    request
  );
  const aggregatedResponse = await streamingResp.response;
  return aggregatedResponse.candidates[0].content;
}

// function generateHtml(result) {
//   return `
//   <!DOCTYPE html>
//   <html lang="en">
//   <head>
//       <meta charset="UTF-8">
//       <meta name="viewport" content="width=device-width, initial-scale=1.0">
//       <title>Node.js + HTML Result</title>
//       <style>
//           body {
//               font-family: Arial, sans-serif;
//               text-align: center;
//               margin: 50px;
//           }
//           h1 {
//               color: #007BFF;
//           }
//           pre {
//               background-color: #f4f4f4;
//               padding: 10px;
//               text-align: left;
//               overflow: auto;
//           }
//       </style>
//   </head>
//   <body>
//       <h1>Node.js + HTML Result</h1>
//       <pre id="result">${JSON.stringify(result, null, 2)}</pre>
//   </body>
//   </html>
//   `;
// }

app.listen(port, () => {
  console.log(`Server listening at http://localhost:${port}`);
});
